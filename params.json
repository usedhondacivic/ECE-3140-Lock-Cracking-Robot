{"name":"CNC Master Lock Cracker","tagline":"For all your cracking needs","body":"### Introduction\r\n\r\nThe CNC Master Lock Cracker (who I call Clicky) is a robot designed to efficiently find the combination to any master lock brand combination lock.\r\nThese are the classic locks you probably associate with your high school locker. \r\nFirst, place the lock in the lock holder and ensure the dial manipulator is seated on the dial.\r\nRotate the dial so that the lock is at 0, then press the button on the microcontroller.\r\nClicky will begin speedily trying combinations, go make some coffee and come back to an unlocked lock!\r\n\r\n### System Overview\r\n\r\n#### Hardware\r\n\r\nClicky's body is made from clear laser cut acrylic, housing the electronics that make him work. A NEMA 17 stepper motor rotates the dial and an analog feedback servo is used to pull on the shackle and determine if the lock has been opened. All of the electronics are driven through a custom circuit board powered by a wall outlet.\r\n\r\n#### Software\r\n\r\nI wrote custom stepper and analog servo drivers to control Clicky, as well a library for using the buttons and capacitive touch slider on board the FRDM-KL46Z to control a LCD based UI. I also implemented the cracking algorithm, which has two modes: naïve and advanced. Naïve mode requires no input from the user, and simply tries every combination in order until the lock opens. Unfortunately, this can take upwards of 64,000 attempts which takes around 36 hours. This time is improved by using advanced mode, which requires the user to find and enter three binding points on the lock. Using advanced mode, the number of combinations is dropped down to 8, which can be attempted in under 30 seconds.\r\n\r\n#### Progress to date:\r\n\r\nI have completed all of the hardware and wiring for the project, and have written the stepper driver. Clicky can currently unlock a lock when given its combination, but the user needs to pull on the shackle.\r\n\r\n#### Still need to do:\r\n\r\nI need to write the servo driver to both control the servo through PWM and read back its value from the analog feedback pin.\r\nI also need to implement the slider and button control, and create the LCD UI.\r\nMy last step will be to implement the advanced cracking algorithm.\r\n\r\n### Project Video Demo\r\n\r\n### Technical Description\r\n\r\n### Additional Resources Used\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}